<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns = "http://www.springframework.org/schema/beans"
        xmlns:xsi ="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop ="http://www.springframework.org/schema/aop" xsi:schemaLocation ="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置客户的dao-->
    <bean id="customerDao" class="com.demo.test2.CustomerDaoImpl" />

    <!--编写切面类配置-->
    <bean id="myAspectXml" class="com.demo.test2.MyAspectXml" />

    <!--配置AOP-->
    <aop:config>
        <aop:aspect ref="myAspectXml">
            <!--
                切入点的表达式
                1.execution() 固定的,不能不写
                2.public 可以省略不写
                3.void 可以写*通配符,不能不写,切入点的方法返回值,如果找不到对应名称和参数以及返回值的方法,就无法加强(运行也不会报错)
                4.包名可以使用*通配符代替的.一个*号只表示一层,多层包需要写对应层数的*号.
                    *..*这个才是简写只要src目录下有这个类可以被作为切入点
                5.类名也可以使用*号,例如类名为CustomerDaoImpl方法和UserDaoImpl两个方法要增强,
                    可以使用通配符这样写 *DaoImpl 只要是类名后缀带这个DaoImpl的都会被增强
                6.方法也可以和类名一样的写法 save*
                7.方法的参数: *号只能表示一个参数不能表示任意个数的参数. ..任意个数的参数
            -->
            <!--<aop:before method="log" pointcut="execution(public void com.demo.test2.CustomerDaoImpl.save())"/>-->
            <!--<aop:before method="log" pointcut="execution(* *..*.*DaoImpl.save*(..))"/>-->

            <!--配置最终通知方法: 方法执行成功或者出现异常都会通知-->
            <!--<aop:after method="after" pointcut="execution(void com.demo.test2.CustomerDaoImpl.save())" />-->

            <!--配置后置通知: 方法成功执行出现通知-->
            <!--<aop:after-returning method="afterReturn" pointcut="execution(void com.demo.test2.CustomerDaoImpl.save())" />-->

            <!--异常通知: 方法出现异常进行通知-->
            <!--<aop:after-throwing method="afterReturn" pointcut="execution(void com.demo.test2.CustomerDaoImpl.save())" />-->

            <!--环绕通知: 方法执行之前和方法执行之后进行通知.默认的情况下,目标对象的方法不能执行,需要手动让目录对象执行-->
            <aop:around method="around" pointcut="execution(void com.demo.test2.CustomerDaoImpl.save())" />

        </aop:aspect>
    </aop:config>
</beans>