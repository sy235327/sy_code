<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!--配置C3P0的连接池-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property  name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/spring_day03" />
		<property name="user" value="root" />
		<property name="password" value="123" />
	</bean>

    <!--配置平台事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--平台事务管理器 需要注入一个连接池-->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--手动编码.提供了事务的模板类,使用该类管理书屋比较简单-->
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

	<!--配置JDBC的模板类 注入属性 使用JdbcDaoSupport-->
	<!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
		<!--<property name="dataSource" ref="dataSource" />-->
	<!--</bean>-->

	<!--配置业务层和持久层-->
	<bean id="accountService" class="com.demo.test1.AccountServiceImpl">
		<property name="accountDao" ref="accountDao" />
        <property name="transactionTemplate" ref="transactionTemplate" />
	</bean>

	<bean id="accountDao" class="com.demo.test1.AccountDaoImpl">
		<!--<property name="jdbcTemplate" ref="jdbcTemplate" /> 继承于JdbcDaoSupport(spring框架提供)这个类中有一个JdbcTemplate属性,配置好后子类直接调用 -->
        <!--<property name="jdbcTemplate" ref="jdbcTemplate" />-->

        <!--在JdbcDaoSupport会判断是否jdbc模板类是否为空(是否配置),如果没有判断可以根据配置的连接池生成一个模板-->
        <property name="dataSource" ref="dataSource" />
	</bean>
</beans>












